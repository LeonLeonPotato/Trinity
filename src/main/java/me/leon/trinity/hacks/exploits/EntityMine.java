package me.leon.trinity.hacks.exploits;

import me.leon.trinity.hacks.Category;
import me.leon.trinity.hacks.Module;
import me.leon.trinity.setting.settings.Boolean;
import me.leon.trinity.utils.entity.PlayerUtils;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.init.Items;
import net.minecraft.item.ItemPickaxe;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.RayTraceResult;


public class EntityMine extends Module {
    public static Boolean pickOnly = new Boolean("Pickaxe Only", false);

    public EntityMine() {
        super("EntityMine", "Mine through entities", Category.EXPLOITS);
    }
    private boolean focus = false;

    @Override
    public void onUpdate() {
        if(nullCheck()) return;

        if(pickOnly.getValue() && !(mc.player.getHeldItemMainhand().getItem() instanceof ItemPickaxe)) return;

        mc.world.loadedEntityList.stream()
                .filter(entity -> entity instanceof EntityLivingBase)
                .filter(entity -> mc.player == entity)
                .map(   entity -> (EntityLivingBase) entity)
                .filter(entity -> !(entity.isDead))
                .forEach(this::process);

        RayTraceResult normal_result = mc.objectMouseOver;

        if (normal_result != null) {
            focus = normal_result.typeOfHit == RayTraceResult.Type.ENTITY;
        }
    }

    private void process(EntityLivingBase event) {
        RayTraceResult bypass_entity_result = event.rayTrace(PlayerUtils.getReach(), mc.getRenderPartialTicks());

        if (bypass_entity_result != null && focus) {
            if (bypass_entity_result.typeOfHit == RayTraceResult.Type.BLOCK) {
                BlockPos block_pos = bypass_entity_result.getBlockPos();

                if (mc.gameSettings.keyBindAttack.isKeyDown()) {
                    mc.playerController.onPlayerDamageBlock(block_pos, EnumFacing.UP);
                }
            }
        }
    }
}